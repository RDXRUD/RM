// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ResourceManagerAPI.DBContext;

#nullable disable

namespace ResourceManagerAPI.Migrations
{
    [DbContext(typeof(PGDBContext))]
    partial class PGDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ResourceManagerAPI.Models.Client", b =>
                {
                    b.Property<int>("client_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("client_id"));

                    b.Property<string>("client_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("partner_incharge")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.HasKey("client_id");

                    b.ToTable("client_master");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.CrossJoin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<float>("allocation_perc")
                        .HasColumnType("real");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("day")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("res_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("cross_view_join");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.CrossViewData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<float>("allocation_perc")
                        .HasColumnType("real");

                    b.Property<int>("date_id")
                        .HasColumnType("integer");

                    b.Property<int>("res_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("cross_view_data");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.DateMaster", b =>
                {
                    b.Property<int>("date_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("date_id"));

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("day")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("date_id");

                    b.ToTable("date_master");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.LocationMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("location_master");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.NewResourceSkills", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("SkillSetID")
                        .HasColumnType("integer");

                    b.Property<int>("res_id")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("resource_skill");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.NewSkillGroup", b =>
                {
                    b.Property<int>("SkillGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SkillGroupID"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("SkillGroup")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("SkillGroupID");

                    b.ToTable("skill_group");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.NewSkillSet", b =>
                {
                    b.Property<int>("SkillSetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SkillSetID"));

                    b.Property<int>("SkillGroupID")
                        .HasColumnType("integer");

                    b.Property<int>("SkillID")
                        .HasColumnType("integer");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SkillSetID");

                    b.ToTable("skill_set");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.NewSkills", b =>
                {
                    b.Property<int>("SkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SkillID"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Skill")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("SkillID");

                    b.ToTable("_skill");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.ProjectMaster", b =>
                {
                    b.Property<int>("project_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("project_id"));

                    b.Property<int>("client_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("project_manager")
                        .HasColumnType("integer");

                    b.Property<string>("project_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("project_status")
                        .HasColumnType("integer");

                    b.Property<int>("project_type")
                        .HasColumnType("integer");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("project_id");

                    b.ToTable("project_master");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.ProjectResAllocation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<float>("allocation_perc")
                        .HasColumnType("real");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("project_id")
                        .HasColumnType("integer");

                    b.Property<int>("res_id")
                        .HasColumnType("integer");

                    b.Property<int>("skill_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("id");

                    b.ToTable("project_res_allocation");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.ProjectStatus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("project_status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("project_status");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.ProjectType", b =>
                {
                    b.Property<int>("project_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("project_type_id"));

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("project_type_id");

                    b.ToTable("project_type");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.ResourceMaster", b =>
                {
                    b.Property<int>("res_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("res_id"));

                    b.Property<int>("location_id")
                        .HasColumnType("integer");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<DateTime>("res_create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("res_email_id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("res_last_modified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("res_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("res_user_id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("sso_flag")
                        .HasColumnType("integer");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("res_id");

                    b.ToTable("resource_master");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.ResourceRole", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("resource_id")
                        .HasColumnType("integer");

                    b.Property<int>("role_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("resource_role");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.RoleMaster", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("role_id"));

                    b.Property<string>("role_description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("role_id");

                    b.ToTable("role_master");
                });
#pragma warning restore 612, 618
        }
    }
}
