// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ResourceManagerAPI.DBContext;

#nullable disable

namespace ResourceManagerAPI.Migrations
{
    [DbContext(typeof(PGDBContext))]
    partial class PGDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ResourceManagerAPI.Models.ColumnLists", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ColumnList")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("columnlistrecord");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.Employee", b =>
                {
                    b.Property<int>("EmpID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmpID"));

                    b.Property<string>("EmailID")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("ResourceName")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("EmpID");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.EmployeeTasks", b =>
                {
                    b.Property<int>("EmployeeTaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmployeeTaskID"));

                    b.Property<int>("EmpID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Finish")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TaskName")
                        .HasColumnType("text");

                    b.HasKey("EmployeeTaskID");

                    b.ToTable("employeetasks");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.LocationMaster", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("location_master");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.NewResourceSkills", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("SkillSetID")
                        .HasColumnType("integer");

                    b.Property<int>("res_id")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("resource_skill");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.NewSkillGroup", b =>
                {
                    b.Property<int>("SkillGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SkillGroupID"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("SkillGroup")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("SkillGroupID");

                    b.ToTable("skill_group");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.NewSkillSet", b =>
                {
                    b.Property<int>("SkillSetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SkillSetID"));

                    b.Property<int>("SkillGroupID")
                        .HasColumnType("integer");

                    b.Property<int>("SkillID")
                        .HasColumnType("integer");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SkillSetID");

                    b.ToTable("skill_set");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.NewSkills", b =>
                {
                    b.Property<int>("SkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SkillID"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Skill")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("SkillID");

                    b.ToTable("_skill");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.PlanUploadRecord", b =>
                {
                    b.Property<int>("UploadRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UploadRecordId"));

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("UploadRecordId");

                    b.ToTable("uploadrecord");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.ResourceMaster", b =>
                {
                    b.Property<int>("res_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("res_id"));

                    b.Property<int>("location_id")
                        .HasColumnType("integer");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<DateTime>("res_create_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("res_email_id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("res_last_modified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("res_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("res_user_id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("sso_flag")
                        .HasColumnType("integer");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("res_id");

                    b.ToTable("resource_master");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.ResourceRole", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("resource_id")
                        .HasColumnType("integer");

                    b.Property<int>("role_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("resource_role");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.ResourceSkills", b =>
                {
                    b.Property<int>("ResourceSkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ResourceSkillID"));

                    b.Property<int>("ResourceID")
                        .HasColumnType("integer");

                    b.Property<int>("SkillSetID")
                        .HasColumnType("integer");

                    b.HasKey("ResourceSkillID");

                    b.ToTable("resourceskills");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.Resources", b =>
                {
                    b.Property<int>("ResourceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ResourceID"));

                    b.Property<string>("EmailID")
                        .HasColumnType("text");

                    b.HasKey("ResourceID");

                    b.ToTable("resources");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.RoleMaster", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("role_id"));

                    b.Property<string>("role_description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("role_id");

                    b.ToTable("role_master");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.SharePointUploadRecord", b =>
                {
                    b.Property<int>("SkillsRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SkillsRecordId"));

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("SkillsRecordId");

                    b.ToTable("skillsuploadrecord");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.SkillGroups", b =>
                {
                    b.Property<int>("SkillGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SkillGroupID"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("SkillGroup")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("SkillGroupID");

                    b.ToTable("skillgroup");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.SkillSet", b =>
                {
                    b.Property<int>("SkillSetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SkillSetID"));

                    b.Property<int>("SkillGroupID")
                        .HasColumnType("integer");

                    b.Property<int>("SkillID")
                        .HasColumnType("integer");

                    b.HasKey("SkillSetID");

                    b.ToTable("skillset");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.Skills", b =>
                {
                    b.Property<int>("SkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SkillID"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Skill")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("SkillID");

                    b.ToTable("skill");
                });

            modelBuilder.Entity("ResourceManagerAPI.Models.Users", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserID"));

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("UserID");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
